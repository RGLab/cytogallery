[{"content":" library(CytoML) acsfile \u0026lt;- system.file(\u0026quot;extdata/cytobank_experiment.acs\u0026quot;, package = \u0026quot;CytoML\u0026quot;) #constrct ce object ce \u0026lt;- open_cytobank_experiment(acsfile) ce ## cytobank Experiment: tcell ## gatingML File: /tmp/Rtmp4q2XMJ/file60f96bce729b/experiments/3637/cytobank_gate_ml2_v41.xml ## panel samples ## 1 Panel 1 1 #ce accessors ce_get_compensations(ce)[[1]] ## B710-A R660-A R780-A V450-A V545-A G560-A ## B710-A 1.00000e+00 3.14389e-02 0.190966000 0.003057570 0.00204723 3.44241e-04 ## R660-A 5.53798e-03 1.00000e+00 0.176812000 0.000000000 0.00000000 0.00000e+00 ## R780-A 9.95863e-05 9.84766e-03 1.000000000 0.000000000 0.00000000 0.00000e+00 ## V450-A 0.00000e+00 8.90985e-05 0.000000000 1.000000000 0.45119500 1.08275e-04 ## V545-A 2.47709e-03 5.23516e-04 0.000000000 0.037961500 1.00000000 6.36181e-05 ## G560-A 1.17224e-01 1.64272e-03 0.000332153 0.000000000 0.00000000 1.00000e+00 ## G780-A 1.42052e-02 4.56896e-04 0.175402000 0.000089025 0.00000000 4.09687e-02 ## G780-A ## B710-A 0.07193380 ## R660-A 0.00661890 ## R780-A 0.03539970 ## V450-A 0.00000000 ## V545-A 0.00000000 ## G560-A 0.00921936 ## G780-A 1.00000000 ce_get_transformations(ce) ## $`B710-A` ## Transformer: asinhtGml2 ## ## $`R660-A` ## Transformer: asinhtGml2 ## ## $`R780-A` ## Transformer: asinhtGml2 ## ## $`V450-A` ## Transformer: asinhtGml2 ## ## $`V545-A` ## Transformer: asinhtGml2 ## ## $`G560-A` ## Transformer: asinhtGml2 ## ## $`G780-A` ## Transformer: asinhtGml2 ## ## attr(,\u0026quot;class\u0026quot;) ## [1] \u0026quot;transformerList\u0026quot; \u0026quot;list\u0026quot; pData(ce) ## name Conditions Individuals ## CytoTrol_CytoTrol_1.fcs CytoTrol_CytoTrol_1.fcs condition1 ptid1 colnames(ce) ## [1] \u0026quot;FSC-A\u0026quot; \u0026quot;FSC-H\u0026quot; \u0026quot;FSC-W\u0026quot; \u0026quot;SSC-A\u0026quot; \u0026quot;B710-A\u0026quot; \u0026quot;R660-A\u0026quot; \u0026quot;R780-A\u0026quot; \u0026quot;V450-A\u0026quot; ## [9] \u0026quot;V545-A\u0026quot; \u0026quot;G560-A\u0026quot; \u0026quot;G780-A\u0026quot; \u0026quot;Time\u0026quot; markernames(ce) ## $CytoTrol_CytoTrol_1.fcs ## [1] \u0026quot;FSC-A\u0026quot; \u0026quot;FSC-H\u0026quot; \u0026quot;FSC-W\u0026quot; \u0026quot;SSC-A\u0026quot; \u0026quot;CD4\u0026quot; ## [6] \u0026quot;CD38 APC\u0026quot; \u0026quot;CD8 APCH7\u0026quot; \u0026quot;CD3\u0026quot; \u0026quot;HLA-DR V500\u0026quot; \u0026quot;CCR7 PE\u0026quot; ## [11] \u0026quot;CD45RA PECy7\u0026quot; \u0026quot;Time\u0026quot; #parse ce into gs gs \u0026lt;- cytobank_to_gatingset(ce) pData(gs) ## Conditions Individuals name ## CytoTrol_CytoTrol_1.fcs condition1 ptid1 CytoTrol_CytoTrol_1.fcs #check stats against csv from acs statsfile \u0026lt;- ce$attachments[1] dt_merged \u0026lt;- gs_compare_cytobank_counts(gs, statsfile, id.vars = \u0026quot;population\u0026quot;, skip = \u0026quot;FCS Filename\u0026quot;) all.equal(dt_merged[, count.x], dt_merged[, count.y], tol = 5e-4) ## [1] TRUE ","description":"","id":0,"section":"gallery","tags":null,"title":"cytobank experiment to gatingset","uri":"/gallery/cytoml/cytobankexperiment/"},{"content":"       library(flowCore) library(flowWorkspace) library(cytoqc) path \u0026lt;- \u0026quot;~/remote/fh/fast/gottardo_r/mike_working/lyoplate_out/parsed\u0026quot; centers \u0026lt;- c(\u0026#39;BIIR\u0026#39;,\u0026#39;CIMR\u0026#39;,\u0026#39;Miami\u0026#39;,\u0026#39;NHLBI\u0026#39;,\u0026#39;Stanford\u0026#39;,\u0026#39;UCLA\u0026#39;,\u0026#39;Yale\u0026#39;) Load gs panel \u0026lt;- \u0026quot;bcell\u0026quot; gslist \u0026lt;- sapply(centers, function(center) { message(\u0026quot;Center: \u0026quot;, center) gs \u0026lt;- load_gs(file.path(path, center, panel)) })  QC Check gates cqc_data \u0026lt;- cqc_gs_list(gslist) #group by gates groups \u0026lt;- cqc_check(cqc_data, \u0026quot;gate\u0026quot;) groups   group_id  nGatingSet  gate      2  6  24hi 38hi, 27- IgD-, 27- IgD+, 27+ IgD-, 27+ IgD+, 27hi 38hi, CD19, CD19 AND CD20, CD19 AND NOT CD20, CD20, CD3, LYM, not dead, root, singlets    1  1  24hi 38hi, 27- IgD-, 27- IgD+, 27+ IgD-, 27+ IgD+, 27hi 38hi, CD19, CD19 AND CD20, CD19 AND NOT CD20, CD20, CD3, LYM, not dead, root     #vis the difference plot_diff(groups) # match reference match_result \u0026lt;- cqc_match(groups, ref = 1, select = c(2)) match_result  {\"x\":{\"filter\":\"none\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"16\"],[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"To Delete\"],[\"24hi 38hi\",\"27- IgD-\",\"27- IgD+\",\"27+ IgD-\",\"27+ IgD+\",\"27hi 38hi\",\"CD19\",\"CD19 AND CD20\",\"CD19 AND NOT CD20\",\"CD20\",\"CD3\",\"LYM\",\"not dead\",\"root\",\"\"],[\"24hi 38hi\",\"27- IgD-\",\"27- IgD+\",\"27+ IgD-\",\"27+ IgD+\",\"27hi 38hi\",\"CD19\",\"CD19 AND CD20\",\"CD19 AND NOT CD20\",\"CD20\",\"CD3\",\"LYM\",\"not dead\",\"root\",\"singlets\"],[\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"black\"],[\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"white\"],[\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"brown\"]],\"container\":\"\\n \\n \\n  \\n \\n Ref\\n 2\\n Var.4\\n Ref\\n 2\\n \\n \\n\",\"options\":{\"columnDefs\":[{\"targets\":[4,5,6],\"visible\":false},{\"orderable\":false,\"targets\":0}],\"paging\":false,\"searching\":false,\"info\":false,\"ordering\":false,\"dom\":\"t\",\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"rowCallback\":\"function(row, data) {\\nvar value=data[4]; $(this.api().cell(row, 1).node()).css({'color':value == \\\"white\\\" ? \\\"white\\\" : value == \\\"black\\\" ? \\\"black\\\" : value == \\\"gray\\\" ? \\\"gray\\\" : value == \\\"brown\\\" ? \\\"brown\\\" : value});\\nvar value=data[5]; $(this.api().cell(row, 2).node()).css({'color':value == \\\"white\\\" ? \\\"white\\\" : value == \\\"black\\\" ? \\\"black\\\" : value == \\\"gray\\\" ? \\\"gray\\\" : value == \\\"brown\\\" ? \\\"brown\\\" : value});\\nvar value=data[6]; $(this.api().cell(row, 3).node()).css({'color':value == \\\"white\\\" ? \\\"white\\\" : value == \\\"black\\\" ? \\\"black\\\" : value == \\\"gray\\\" ? \\\"gray\\\" : value == \\\"brown\\\" ? \\\"brown\\\" : value});\\n}\"}},\"evals\":[\"options.rowCallback\"],\"jsHooks\":[]} cqc_fix(match_result) cqc_check(cqc_data, \u0026quot;gate\u0026quot;)   group_id  nGatingSet  gate      1  7  24hi 38hi, 27- IgD-, 27- IgD+, 27+ IgD-, 27+ IgD+, 27hi 38hi, CD19, CD19 AND CD20, CD19 AND NOT CD20, CD20, CD3, LYM, not dead, root      QC check for channel groups \u0026lt;- cqc_check(cqc_data, \u0026quot;channel\u0026quot;) groups   group_id  nGatingSet  channel      1  1  \u0026lt;Alexa Fluor 488-A\u0026gt;, \u0026lt;AmCyan-A\u0026gt;, \u0026lt;APC-A\u0026gt;, \u0026lt;APC-Cy7-A\u0026gt;, \u0026lt;Pacific Blue-A\u0026gt;, \u0026lt;PE YG-A\u0026gt;, \u0026lt;PE-Cy7 YG-A\u0026gt;, \u0026lt;PerCP-Cy5-5-A\u0026gt;, FSC-A, FSC-H, FSC-W, SSC-A, SSC-H, SSC-W, Time    2  1  \u0026lt;Am Cyan-A\u0026gt;, \u0026lt;APC-A\u0026gt;, \u0026lt;APC-Cy7-A\u0026gt;, \u0026lt;FITC-A\u0026gt;, \u0026lt;Pacific Blue-A\u0026gt;, \u0026lt;PE-A\u0026gt;, \u0026lt;PE-Cy7-A\u0026gt;, \u0026lt;PerCP-Cy5-5-A\u0026gt;, FSC-A, FSC-H, FSC-W, SSC-A, SSC-H, SSC-W, Time    3  1  \u0026lt;AmCyan-A\u0026gt;, \u0026lt;APC-A\u0026gt;, \u0026lt;APC-Cy7-A\u0026gt;, \u0026lt;FITC-A\u0026gt;, \u0026lt;Pacific Blue-A\u0026gt;, \u0026lt;PE Cy7 YG-A\u0026gt;, \u0026lt;PE-A\u0026gt;, \u0026lt;PerCP-Cy5-5-A\u0026gt;, FSC-A, FSC-W, SSC-A, SSC-W, Time    4  1  \u0026lt;APC-A\u0026gt;, \u0026lt;APC-Cy7-A\u0026gt;, \u0026lt;FITC-A\u0026gt;, \u0026lt;PE-A\u0026gt;, \u0026lt;PE-Cy7-A\u0026gt;, \u0026lt;PerCP-Cy5-5-A\u0026gt;, \u0026lt;V450-A\u0026gt;, \u0026lt;V500-A\u0026gt;, FSC-A, SSC-A, Time    5  1  \u0026lt;APC-A\u0026gt;, \u0026lt;APC-H7-A\u0026gt;, \u0026lt;BD Horizon V450-A\u0026gt;, \u0026lt;BD Horizon V500-A\u0026gt;, \u0026lt;FITC-A\u0026gt;, \u0026lt;PE-A\u0026gt;, \u0026lt;PE-Cy7-A\u0026gt;, \u0026lt;PerCP-Cy5-5-A\u0026gt;, FSC-A, FSC-H, FSC-W, SSC-A, SSC-H, SSC-W, Time    6  1  \u0026lt;APC-A\u0026gt;, \u0026lt;APC-H7-A\u0026gt;, \u0026lt;FITC-A\u0026gt;, \u0026lt;PE-A\u0026gt;, \u0026lt;PE-Cy7-A\u0026gt;, \u0026lt;PerCP-Cy5-5-A\u0026gt;, \u0026lt;V450-A\u0026gt;, \u0026lt;V500-A\u0026gt;, FSC-A, FSC-H, SSC-A, SSC-H, Time    7  1  \u0026lt;B515-A\u0026gt;, \u0026lt;B710-A\u0026gt;, \u0026lt;G560-A\u0026gt;, \u0026lt;G780-A\u0026gt;, \u0026lt;R660-A\u0026gt;, \u0026lt;R780-A\u0026gt;, \u0026lt;V450-A\u0026gt;, \u0026lt;V545-A\u0026gt;, FSC-A, FSC-H, FSC-W, SSC-A, SSC-H, SSC-W, Time      Channels are very different across centers so move on to check marker groups \u0026lt;- cqc_check(cqc_data, \u0026quot;marker\u0026quot;) groups   group_id  nGatingSet  marker      4  2  CD19, CD20, CD24, CD27, CD3, CD38, IgD, Live Green    1  1  CD19 PerCP-Cy55, CD20 APC-H7, CD24 PE, CD27 PE-Cy7, CD3 V450, CD38 APC, IgD V500, Live Dead FITC    2  1  CD19, CD20, CD24, CD27, CD3, CD38, IgD, LIVE    3  1  CD19, CD20, CD24, CD27, CD3, CD38, IgD, LIVE DEAD    5  1  CD19, CD20, CD24, CD27, CD3, CD38, IGD, LIVE_GREEN    6  1  CD19, CD20, CD24, CD27, CD3, CD38, IgD, Live/Dead      Markers are more standardized and go ahead to further clean it res \u0026lt;- cqc_match(groups, ref = 2) res  {\"x\":{\"filter\":\"none\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"],[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"CD19\",\"CD20\",\"CD24\",\"CD27\",\"CD3\",\"CD38\",\"IgD\",\"LIVE\"],[\"CD19 PerCP-Cy55\",\"CD20 APC-H7\",\"CD24 PE\",\"CD27 PE-Cy7\",\"CD3 V450\",\"CD38 APC\",\"IgD V500\",\"Live Dead FITC\"],[\"CD19\",\"CD20\",\"CD24\",\"CD27\",\"CD3\",\"CD38\",\"IgD\",\"LIVE DEAD\"],[\"CD19\",\"CD20\",\"CD24\",\"CD27\",\"CD3\",\"CD38\",\"IgD\",\"Live Green\"],[\"CD19\",\"CD20\",\"CD24\",\"CD27\",\"CD3\",\"CD38\",\"IGD\",\"LIVE_GREEN\"],[\"CD19\",\"CD20\",\"CD24\",\"CD27\",\"CD3\",\"CD38\",\"IgD\",\"Live/Dead\"],[\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\"],[\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\"],[\"green\",\"green\",\"green\",\"green\",\"green\",\"green\",\"green\",\"green\"],[\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"green\"],[\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"green\"],[\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"green\",\"green\"],[\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"green\"]],\"container\":\"\\n \\n \\n  \\n \\n Ref\\n 1\\n 3\\n 4\\n 5\\n 6\\n Var.8\\n Ref\\n 1\\n 3\\n 4\\n 5\\n 6\\n \\n \\n\",\"options\":{\"columnDefs\":[{\"targets\":[8,9,10,11,12,13,14],\"visible\":false},{\"orderable\":false,\"targets\":0}],\"paging\":false,\"searching\":false,\"info\":false,\"ordering\":false,\"dom\":\"t\",\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"rowCallback\":\"function(row, data) {\\nvar value=data[8]; $(this.api().cell(row, 1).node()).css({'color':value == \\\"white\\\" ? \\\"white\\\" : value == \\\"black\\\" ? \\\"black\\\" : value == \\\"green\\\" ? \\\"green\\\" : value == \\\"gray\\\" ? \\\"gray\\\" : value});\\nvar value=data[9]; $(this.api().cell(row, 2).node()).css({'color':value == \\\"white\\\" ? \\\"white\\\" : value == \\\"black\\\" ? \\\"black\\\" : value == \\\"green\\\" ? \\\"green\\\" : value == \\\"gray\\\" ? \\\"gray\\\" : value});\\nvar value=data[10]; $(this.api().cell(row, 3).node()).css({'color':value == \\\"white\\\" ? \\\"white\\\" : value == \\\"black\\\" ? \\\"black\\\" : value == \\\"green\\\" ? \\\"green\\\" : value == \\\"gray\\\" ? \\\"gray\\\" : value});\\nvar value=data[11]; $(this.api().cell(row, 4).node()).css({'color':value == \\\"white\\\" ? \\\"white\\\" : value == \\\"black\\\" ? \\\"black\\\" : value == \\\"green\\\" ? \\\"green\\\" : value == \\\"gray\\\" ? \\\"gray\\\" : value});\\nvar value=data[12]; $(this.api().cell(row, 5).node()).css({'color':value == \\\"white\\\" ? \\\"white\\\" : value == \\\"black\\\" ? \\\"black\\\" : value == \\\"green\\\" ? \\\"green\\\" : value == \\\"gray\\\" ? \\\"gray\\\" : value});\\nvar value=data[13]; $(this.api().cell(row, 6).node()).css({'color':value == \\\"white\\\" ? \\\"white\\\" : value == \\\"black\\\" ? \\\"black\\\" : value == \\\"green\\\" ? \\\"green\\\" : value == \\\"gray\\\" ? \\\"gray\\\" : value});\\nvar value=data[14]; $(this.api().cell(row, 7).node()).css({'color':value == \\\"white\\\" ? \\\"white\\\" : value == \\\"black\\\" ? \\\"black\\\" : value == \\\"green\\\" ? \\\"green\\\" : value == \\\"gray\\\" ? \\\"gray\\\" : value});\\n}\"}},\"evals\":[\"options.rowCallback\"],\"jsHooks\":[]}  Apply the fix and update checks cqc_fix(res) cqc_check(cqc_data, \u0026quot;marker\u0026quot;)   group_id  nGatingSet  marker      1  7  CD19, CD20, CD24, CD27, CD3, CD38, IgD, LIVE      Use the marker as reference to standardize the channels across centers res \u0026lt;- cqc_check(cqc_data, \u0026quot;panel\u0026quot;, by = \u0026quot;marker\u0026quot;) res   marker  group 1(n=1)  group 2(n=1)  group 3(n=1)  group 4(n=1)  group 5(n=1)  group 6(n=1)  group 7(n=1)      CD19  \u0026lt;PerCP-Cy5-5-A\u0026gt;  \u0026lt;PerCP-Cy5-5-A\u0026gt;  \u0026lt;PerCP-Cy5-5-A\u0026gt;  \u0026lt;PerCP-Cy5-5-A\u0026gt;  \u0026lt;PerCP-Cy5-5-A\u0026gt;  \u0026lt;PerCP-Cy5-5-A\u0026gt;  \u0026lt;B710-A\u0026gt;    CD20  \u0026lt;APC-Cy7-A\u0026gt;  \u0026lt;APC-Cy7-A\u0026gt;  \u0026lt;APC-Cy7-A\u0026gt;  \u0026lt;APC-Cy7-A\u0026gt;  \u0026lt;APC-H7-A\u0026gt;  \u0026lt;APC-H7-A\u0026gt;  \u0026lt;R780-A\u0026gt;    CD24  \u0026lt;PE YG-A\u0026gt;  \u0026lt;PE-A\u0026gt;  \u0026lt;PE-A\u0026gt;  \u0026lt;PE-A\u0026gt;  \u0026lt;PE-A\u0026gt;  \u0026lt;PE-A\u0026gt;  \u0026lt;G560-A\u0026gt;    CD27  \u0026lt;PE-Cy7 YG-A\u0026gt;  \u0026lt;PE-Cy7-A\u0026gt;  \u0026lt;PE Cy7 YG-A\u0026gt;  \u0026lt;PE-Cy7-A\u0026gt;  \u0026lt;PE-Cy7-A\u0026gt;  \u0026lt;PE-Cy7-A\u0026gt;  \u0026lt;G780-A\u0026gt;    CD3  \u0026lt;Pacific Blue-A\u0026gt;  \u0026lt;Pacific Blue-A\u0026gt;  \u0026lt;Pacific Blue-A\u0026gt;  \u0026lt;V450-A\u0026gt;  \u0026lt;BD Horizon V450-A\u0026gt;  \u0026lt;V450-A\u0026gt;  \u0026lt;V450-A\u0026gt;    CD38  \u0026lt;APC-A\u0026gt;  \u0026lt;APC-A\u0026gt;  \u0026lt;APC-A\u0026gt;  \u0026lt;APC-A\u0026gt;  \u0026lt;APC-A\u0026gt;  \u0026lt;APC-A\u0026gt;  \u0026lt;R660-A\u0026gt;    IgD  \u0026lt;AmCyan-A\u0026gt;  \u0026lt;Am Cyan-A\u0026gt;  \u0026lt;AmCyan-A\u0026gt;  \u0026lt;V500-A\u0026gt;  \u0026lt;BD Horizon V500-A\u0026gt;  \u0026lt;V500-A\u0026gt;  \u0026lt;V545-A\u0026gt;    LIVE  \u0026lt;Alexa Fluor 488-A\u0026gt;  \u0026lt;FITC-A\u0026gt;  \u0026lt;FITC-A\u0026gt;  \u0026lt;FITC-A\u0026gt;  \u0026lt;FITC-A\u0026gt;  \u0026lt;FITC-A\u0026gt;  \u0026lt;B515-A\u0026gt;     res \u0026lt;- cqc_match(res, ref = 1) res   marker  Ref group  group 2(n=1)  group 3(n=1)  group 4(n=1)  group 5(n=1)  group 6(n=1)  group 7(n=1)      CD19  \u0026lt;PerCP-Cy5-5-A\u0026gt;  \u0026lt;PerCP-Cy5-5-A\u0026gt;  \u0026lt;PerCP-Cy5-5-A\u0026gt;  \u0026lt;PerCP-Cy5-5-A\u0026gt;  \u0026lt;PerCP-Cy5-5-A\u0026gt;  \u0026lt;PerCP-Cy5-5-A\u0026gt;  \u0026lt;B710-A\u0026gt;    CD20  \u0026lt;APC-Cy7-A\u0026gt;  \u0026lt;APC-Cy7-A\u0026gt;  \u0026lt;APC-Cy7-A\u0026gt;  \u0026lt;APC-Cy7-A\u0026gt;  \u0026lt;APC-H7-A\u0026gt;  \u0026lt;APC-H7-A\u0026gt;  \u0026lt;R780-A\u0026gt;    CD24  \u0026lt;PE YG-A\u0026gt;  \u0026lt;PE-A\u0026gt;  \u0026lt;PE-A\u0026gt;  \u0026lt;PE-A\u0026gt;  \u0026lt;PE-A\u0026gt;  \u0026lt;PE-A\u0026gt;  \u0026lt;G560-A\u0026gt;    CD27  \u0026lt;PE-Cy7 YG-A\u0026gt;  \u0026lt;PE-Cy7-A\u0026gt;  \u0026lt;PE Cy7 YG-A\u0026gt;  \u0026lt;PE-Cy7-A\u0026gt;  \u0026lt;PE-Cy7-A\u0026gt;  \u0026lt;PE-Cy7-A\u0026gt;  \u0026lt;G780-A\u0026gt;    CD3  \u0026lt;Pacific Blue-A\u0026gt;  \u0026lt;Pacific Blue-A\u0026gt;  \u0026lt;Pacific Blue-A\u0026gt;  \u0026lt;V450-A\u0026gt;  \u0026lt;BD Horizon V450-A\u0026gt;  \u0026lt;V450-A\u0026gt;  \u0026lt;V450-A\u0026gt;    CD38  \u0026lt;APC-A\u0026gt;  \u0026lt;APC-A\u0026gt;  \u0026lt;APC-A\u0026gt;  \u0026lt;APC-A\u0026gt;  \u0026lt;APC-A\u0026gt;  \u0026lt;APC-A\u0026gt;  \u0026lt;R660-A\u0026gt;    IgD  \u0026lt;AmCyan-A\u0026gt;  \u0026lt;Am Cyan-A\u0026gt;  \u0026lt;AmCyan-A\u0026gt;  \u0026lt;V500-A\u0026gt;  \u0026lt;BD Horizon V500-A\u0026gt;  \u0026lt;V500-A\u0026gt;  \u0026lt;V545-A\u0026gt;    LIVE  \u0026lt;Alexa Fluor 488-A\u0026gt;  \u0026lt;FITC-A\u0026gt;  \u0026lt;FITC-A\u0026gt;  \u0026lt;FITC-A\u0026gt;  \u0026lt;FITC-A\u0026gt;  \u0026lt;FITC-A\u0026gt;  \u0026lt;B515-A\u0026gt;     cqc_fix(res) cqc_check(cqc_data, \u0026quot;panel\u0026quot;, by = \u0026quot;marker\u0026quot;)   marker  group 1(n=7)      CD19  \u0026lt;PerCP-Cy5-5-A\u0026gt;    CD20  \u0026lt;APC-Cy7-A\u0026gt;    CD24  \u0026lt;PE YG-A\u0026gt;    CD27  \u0026lt;PE-Cy7 YG-A\u0026gt;    CD3  \u0026lt;Pacific Blue-A\u0026gt;    CD38  \u0026lt;APC-A\u0026gt;    IgD  \u0026lt;AmCyan-A\u0026gt;    LIVE  \u0026lt;Alexa Fluor 488-A\u0026gt;      check channel again groups \u0026lt;- cqc_check(cqc_data, \u0026quot;channel\u0026quot;) groups   group_id  nGatingSet  channel      1  4  \u0026lt;Alexa Fluor 488-A\u0026gt;, \u0026lt;AmCyan-A\u0026gt;, \u0026lt;APC-A\u0026gt;, \u0026lt;APC-Cy7-A\u0026gt;, \u0026lt;Pacific Blue-A\u0026gt;, \u0026lt;PE YG-A\u0026gt;, \u0026lt;PE-Cy7 YG-A\u0026gt;, \u0026lt;PerCP-Cy5-5-A\u0026gt;, FSC-A, FSC-H, FSC-W, SSC-A, SSC-H, SSC-W, Time    2  1  \u0026lt;Alexa Fluor 488-A\u0026gt;, \u0026lt;AmCyan-A\u0026gt;, \u0026lt;APC-A\u0026gt;, \u0026lt;APC-Cy7-A\u0026gt;, \u0026lt;Pacific Blue-A\u0026gt;, \u0026lt;PE YG-A\u0026gt;, \u0026lt;PE-Cy7 YG-A\u0026gt;, \u0026lt;PerCP-Cy5-5-A\u0026gt;, FSC-A, FSC-H, SSC-A, SSC-H, Time    3  1  \u0026lt;Alexa Fluor 488-A\u0026gt;, \u0026lt;AmCyan-A\u0026gt;, \u0026lt;APC-A\u0026gt;, \u0026lt;APC-Cy7-A\u0026gt;, \u0026lt;Pacific Blue-A\u0026gt;, \u0026lt;PE YG-A\u0026gt;, \u0026lt;PE-Cy7 YG-A\u0026gt;, \u0026lt;PerCP-Cy5-5-A\u0026gt;, FSC-A, FSC-W, SSC-A, SSC-W, Time    4  1  \u0026lt;Alexa Fluor 488-A\u0026gt;, \u0026lt;AmCyan-A\u0026gt;, \u0026lt;APC-A\u0026gt;, \u0026lt;APC-Cy7-A\u0026gt;, \u0026lt;Pacific Blue-A\u0026gt;, \u0026lt;PE YG-A\u0026gt;, \u0026lt;PE-Cy7 YG-A\u0026gt;, \u0026lt;PerCP-Cy5-5-A\u0026gt;, FSC-A, SSC-A, Time     diff(groups)   group_id  nGatingSet  channel      1  4  FSC-H, FSC-W, SSC-H, SSC-W    2  1  FSC-H, SSC-H    3  1  FSC-W, SSC-W      Remove H/W channels res \u0026lt;- cqc_match(groups, ref = 4) res  {\"x\":{\"filter\":\"none\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"13\"],[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"To Delete\"],[\"\u0026lt;Alexa Fluor 488-A\u0026gt;\",\"\u0026lt;AmCyan-A\u0026gt;\",\"\u0026lt;APC-A\u0026gt;\",\"\u0026lt;APC-Cy7-A\u0026gt;\",\"\u0026lt;Pacific Blue-A\u0026gt;\",\"\u0026lt;PE YG-A\u0026gt;\",\"\u0026lt;PE-Cy7 YG-A\u0026gt;\",\"\u0026lt;PerCP-Cy5-5-A\u0026gt;\",\"FSC-A\",\"SSC-A\",\"Time\",\"\"],[\"\u0026lt;Alexa Fluor 488-A\u0026gt;\",\"\u0026lt;AmCyan-A\u0026gt;\",\"\u0026lt;APC-A\u0026gt;\",\"\u0026lt;APC-Cy7-A\u0026gt;\",\"\u0026lt;Pacific Blue-A\u0026gt;\",\"\u0026lt;PE YG-A\u0026gt;\",\"\u0026lt;PE-Cy7 YG-A\u0026gt;\",\"\u0026lt;PerCP-Cy5-5-A\u0026gt;\",\"FSC-A\",\"SSC-A\",\"Time\",\"FSC-H,FSC-W,SSC-H,SSC-W\"],[\"\u0026lt;Alexa Fluor 488-A\u0026gt;\",\"\u0026lt;AmCyan-A\u0026gt;\",\"\u0026lt;APC-A\u0026gt;\",\"\u0026lt;APC-Cy7-A\u0026gt;\",\"\u0026lt;Pacific Blue-A\u0026gt;\",\"\u0026lt;PE YG-A\u0026gt;\",\"\u0026lt;PE-Cy7 YG-A\u0026gt;\",\"\u0026lt;PerCP-Cy5-5-A\u0026gt;\",\"FSC-A\",\"SSC-A\",\"Time\",\"FSC-H,SSC-H\"],[\"\u0026lt;Alexa Fluor 488-A\u0026gt;\",\"\u0026lt;AmCyan-A\u0026gt;\",\"\u0026lt;APC-A\u0026gt;\",\"\u0026lt;APC-Cy7-A\u0026gt;\",\"\u0026lt;Pacific Blue-A\u0026gt;\",\"\u0026lt;PE YG-A\u0026gt;\",\"\u0026lt;PE-Cy7 YG-A\u0026gt;\",\"\u0026lt;PerCP-Cy5-5-A\u0026gt;\",\"FSC-A\",\"SSC-A\",\"Time\",\"FSC-W,SSC-W\"],[\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"white\",\"black\"],[\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"white\"],[\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"brown\"],[\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"brown\"],[\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"brown\"]],\"container\":\"\\n \\n \\n  \\n \\n Ref\\n 1\\n 2\\n 3\\n Var.6\\n Ref\\n 1\\n 2\\n 3\\n \\n \\n\",\"options\":{\"columnDefs\":[{\"targets\":[6,7,8,9,10],\"visible\":false},{\"orderable\":false,\"targets\":0}],\"paging\":false,\"searching\":false,\"info\":false,\"ordering\":false,\"dom\":\"t\",\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"rowCallback\":\"function(row, data) {\\nvar value=data[6]; $(this.api().cell(row, 1).node()).css({'color':value == \\\"white\\\" ? \\\"white\\\" : value == \\\"black\\\" ? \\\"black\\\" : value == \\\"gray\\\" ? \\\"gray\\\" : value == \\\"brown\\\" ? \\\"brown\\\" : value});\\nvar value=data[7]; $(this.api().cell(row, 2).node()).css({'color':value == \\\"white\\\" ? \\\"white\\\" : value == \\\"black\\\" ? \\\"black\\\" : value == \\\"gray\\\" ? \\\"gray\\\" : value == \\\"brown\\\" ? \\\"brown\\\" : value});\\nvar value=data[8]; $(this.api().cell(row, 3).node()).css({'color':value == \\\"white\\\" ? \\\"white\\\" : value == \\\"black\\\" ? \\\"black\\\" : value == \\\"gray\\\" ? \\\"gray\\\" : value == \\\"brown\\\" ? \\\"brown\\\" : value});\\nvar value=data[9]; $(this.api().cell(row, 4).node()).css({'color':value == \\\"white\\\" ? \\\"white\\\" : value == \\\"black\\\" ? \\\"black\\\" : value == \\\"gray\\\" ? \\\"gray\\\" : value == \\\"brown\\\" ? \\\"brown\\\" : value});\\nvar value=data[10]; $(this.api().cell(row, 5).node()).css({'color':value == \\\"white\\\" ? \\\"white\\\" : value == \\\"black\\\" ? \\\"black\\\" : value == \\\"gray\\\" ? \\\"gray\\\" : value == \\\"brown\\\" ? \\\"brown\\\" : value});\\n}\"}},\"evals\":[\"options.rowCallback\"],\"jsHooks\":[]} cqc_fix(res)  Coerce it directly into single GatingSet (zero-copying) gs \u0026lt;- merge_list_to_gs(cqc_data) gs ## A GatingSet with 63 samples  ","description":"","id":1,"section":"gallery","tags":null,"title":"cytoqc -- bcell","uri":"/gallery/cytoqc/bcell/"},{"content":" library(flowCore) library(flowWorkspace) library(openCyto) data(GvHD) gs \u0026lt;- GatingSet(GvHD) #select subset for demo gs \u0026lt;- subset(gs, Patient %in% c(5, 6) \u0026amp; Visit %in% c(1,2,3)) #append the stim col for demo purpose pData(gs)[[\u0026quot;stim\u0026quot;]] \u0026lt;- c(\u0026quot;neg\u0026quot;, \u0026quot;antigen\u0026quot;, \u0026quot;antigen\u0026quot;, \u0026quot;neg\u0026quot;, \u0026quot;antigen\u0026quot;, \u0026quot;antigen\u0026quot;) pData(gs) ## Patient stim Visit Grade name Days ## s5a01 5 neg 1 3 s5a01 -6 ## s5a02 5 antigen 2 3 s5a02 0 ## s5a03 5 antigen 3 3 s5a03 6 ## s6a01 6 neg 1 3 s6a01 -8 ## s6a02 6 antigen 2 3 s6a02 0 ## s6a03 6 antigen 3 3 s6a03 5 convetional gating independently for each sample gs_add_gating_method(gs, alias = \u0026quot;A\u0026quot;, pop = \u0026quot;+\u0026quot;, parent = \u0026quot;root\u0026quot;, dims = \u0026quot;FSC-H\u0026quot;, gating_method = \u0026quot;mindensity\u0026quot;) library(ggcyto) autoplot(gs, \u0026quot;A\u0026quot; , y = \u0026quot;SSC-H\u0026quot;) + facet_grid(Patient ~ stim)  negative control based gating # preprocessing function does actual gating on the neg sample # fs contains the samples that belong to the same group .ppnegGate \u0026lt;- function(fs, gs, gm, channels, groupBy, isCollapse, ...) { #select the target sample sn \u0026lt;- rownames(subset(pData(fs), stim == \u0026quot;neg\u0026quot;)) g \u0026lt;- openCyto::gate_mindensity(fs[[sn]], channels, ...) #replicate that gate across samples for this group and return them as pp results sapply(sampleNames(fs), function(i)g) } registerPlugins(fun=.ppnegGate, methodName=\u0026#39;ppnegGate\u0026#39;, type = \u0026quot;preprocessing\u0026quot;) ## [1] TRUE # the customized gating function simply receive the gate from preprocessing through pp_res argument # and return it as it is .negGate \u0026lt;- function(fr, pp_res, channels, ...){ g \u0026lt;- pp_res return(g) } registerPlugins(fun=.negGate,methodName=\u0026#39;negGate\u0026#39;) ## [1] TRUE gs_add_gating_method(gs, alias = \u0026quot;B\u0026quot;, pop = \u0026quot;+\u0026quot;, parent = \u0026quot;root\u0026quot;, dims = \u0026quot;FSC-H\u0026quot; , gating_method = \u0026quot;negGate\u0026quot; , groupBy = \u0026quot;Patient\u0026quot; #this will split data into groups and pass each individual group to preprocessing , preprocessing_method = \u0026quot;ppnegGate\u0026quot; ) autoplot(gs, \u0026quot;B\u0026quot; , y = \u0026quot;SSC-H\u0026quot;) + facet_grid(Patient ~ stim)  ","description":"","id":2,"section":"gallery","tags":null,"title":"negative control based gating","uri":"/gallery/opencyto/neg_control/"}]